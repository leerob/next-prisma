generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url = "***"
}
model Account {
  id                 Int       @default(autoincrement()) @id
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")

  @@map(name: "accounts")
}

model Session {
  id           Int      @default(autoincrement()) @id
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique 
  accessToken  String   @unique 
  createdAt    DateTime @default(now()) 
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model User {
  id            Int       @default(autoincrement()) @id
  name          String?
  email         String?   @unique
  emailVerified DateTime? 
  image         String?
  createdAt     DateTime  @default(now()) 
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  @@map(name: "users")
}

model VerificationRequest {
  id         Int      @default(autoincrement()) @id
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime  @default(now()) 
  updatedAt  DateTime  @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
}
model Song {
  id            Int       @default(autoincrement()) @id
  name          String
  youtubeId     String?
  albumCoverUrl String?
  artistId      Int?
  playlistId    Int?
  artist        Artist?   @relation(fields: [artistId], references: [id])
  Playlist      Playlist? @relation(fields: [playlistId], references: [id])
}

model Artist {
  id    Int     @default(autoincrement()) @id
  name  String  @unique
  genre String?
  songs Song[]
}

model Playlist {
  id    Int    @default(autoincrement()) @id
  name  String @unique
  songs Song[]
}
